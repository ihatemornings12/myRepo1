# This is an example of ASL file that contains a create action used in an unconditional attack.
# It creates a new packet. The action 'change' must be used to fill the fields of the new packet.
# The new packet must be explicitly sended to the next layer in the communication stack
# by using the action 'send' or 'put'.
#
# usage: 
#  python ../interpreter/interpreter.py -i create-unconditional.adl -o create-unconditional.xlm
# 
# author: Francesco Racciatti <racciatti.francesco@gmail.com>

# declare and initialize a list of nodes
list dstList = {1,2,3,4}

# unconditional attack statement (starts at 100 and repeats itself every 0.1 ms)
from 100 every 0.1 do {

		# declare a packet
		packet fakePacket
		
		# create a new packet
		create(fakePacket, "APP.type", "0301")

		# fill the new packet properly
		change(fakePacket, "APP.periodGreen", 9)
        change(fakePacket, "APP.periodYellow", 0.5)
        change(fakePacket, "APP.periodRed", 0.5)
		
        # handle control info
        change(fakePacket, "controlInfo.sockId", 4)
        change(fakePacket, "controlInfo.interfaceId", 101)
        change(fakePacket, "controlInfo.destPort", 2000)
        change(fakePacket, "controlInfo.destAddr", "10.0.0.9")
        change(fakePacket, "controlInfo.outputGate", "app_udp_sup$o[1]")
	
        # handle field sending
        change(fakePacket, "sending.arrivalGate", "192.0.0.1")
        
		# put the new packet in the RX buffer of nodes in the dstList
		put(fakePacket, dstList, RX, FALSE, 0)

}
