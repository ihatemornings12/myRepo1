list dstList = {10} #7 client 3, 10 server 2
list dstList2 = {12} #switch

# example of TX/RX application packet
#from 20 every 0.4 do {

    # declare a packet
#	packet fakePacket
    
	# create a new packet
#	create(fakePacket, "APP.type", "1001") #"1001 app type" 0004 rx

	# fill the new packet properly
	
#	change(fakePacket, "APP.info", RANDOM_INT)
#	change(fakePacket, "APP.name", "myPacket")
	
#	change(fakePacket, "controlInfo.destAddr", "192.168.2.6")
#	change(fakePacket, "controlInfo.sockId", RANDOM_INT)
#	change(fakePacket, "controlInfo.interfaceId", 101)
#	change(fakePacket, "controlInfo.destPort", 123)
	
#	change(fakePacket, "sending.outputGate", "app_udp_inf$o[0]") #app_udp_sup$o[0] RX
	
#	put(fakePacket, dstList, TX, FALSE, 0)
#}

#################################################################################

#random IP src addresses:host3

#from 21 nodes in dstList do {
#	filter ("TRA.destinationPort" == "123" and "attackInfo.fromGlobalFilter" == 1)
#		change(original, "controlInfo.srcAddr", RANDOM_IP)
#}
##################################################################################

#random IP and MAC src addresses: host3

#from 21 nodes in dstList do {
#    filter ("NET.destAddress" == "192.168.2.6" and "attackInfo.fromGlobalFilter" == 1)
#		change(original, "NET.srcAddress", RANDOM_IP)
 #      change(original, "controlInfo.src", RANDOM_MAC)
#}
##################################################################################

#drop based on control info: switch

#from 21 nodes in dstList2 do {
#	filter ("attackInfo.fromGlobalFilter" == 1)
#		drop(original, 1)
#}
##################################################################################

#drop based on the mac dst address: switch	
	
#from 21 nodes in dstList2 do {
#	filter ("MAC.dest" == "0A-AA-00-00-00-06" )
#		drop(original, 1)
#}
##################################################################################

# inject packet into the switch's buffer having payload targeting a victim-host

from 20 every 0.4 do {

    # declare a packet
	packet macPacket
    packet ipPacket
    packet traPacket
    packet appPacket
    
    #create a new APP-layer packet
    create(appPacket, "APP.type", "1001")
    change(appPacket, "APP.info", 1)
    change(appPacket, "APP.name", "myPacket")

    # create a new TRA-layer packet
    create(traPacket, "TRA.type", "0000") 
    change(traPacket, "TRA.destinationPort", 123)
    
    ############ SET THE PAYLOAD ###########
    change(traPacket, "TRA.payload", appPacket)
	########################################        

    # create a new NET-layer packet
    create(ipPacket, "NET.type", "0000") #"0000" no controlInfo
    change(ipPacket, "NET.srcAddress", RANDOM_IP)
    change(ipPacket, "NET.destAddress", "192.168.0.21")
    change(ipPacket, "NET.transportProtocol", 17)
    #change(ipPacket, "NET.timeToLive", 5)
    #change(ipPacket, "NET.typeOfService", "a")
    
    ############ SET THE PAYLOAD ############
    change(ipPacket, "NET.payload", traPacket)
    #########################################
    
	# create a new MAC-layer packet
	create(macPacket, "MAC.type", "0010")
	change(macPacket, "MAC.src", RANDOM_MAC)
    change(macPacket, "MAC.dest", "0A-AA-00-00-00-06" )
	change(macPacket, "MAC.etherType","ETHERTYPE_IPv4")
	
	
	############ SET THE PAYLOAD ############
	change (macPacket, "MAC.payload", ipPacket)
	#########################################
	
	change(macPacket, "sending.outputGate", "net_eth_sup$o[5]") 
	
	put(macPacket, dstList2, RX, FALSE, 0)
}










