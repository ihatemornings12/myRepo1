//
// Generated file, do not edit! Created by nedtool 4.6 from applications/voip/SimpleVoIPPacket.msg.
//

#ifndef _SIMPLEVOIPPACKET_M_H_
#define _SIMPLEVOIPPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif



/**
 * Class generated from <tt>applications/voip/SimpleVoIPPacket.msg:23</tt> by nedtool.
 * <pre>
 * //
 * // Represents a voice packet used by SimpleVoIPSender / SimpleVoIPReceiver 
 * //
 * packet SimpleVoIPPacket
 * {
 *     unsigned int talkspurtID;          // identifies the talkspurt
 *     unsigned int talkspurtNumPackets;  // number of all packets of current talkspurt
 *     unsigned int packetID;             // 0..talkspurtNumPackets-1
 *     simtime_t voipTimestamp;            // "mouth" timestamp of begin of voice in this packet
 *     simtime_t voiceDuration;            // duration of voice in this packet
 * }
 * </pre>
 */
class INET_API SimpleVoIPPacket : public ::cPacket
{
  protected:
    unsigned int talkspurtID_var;
    unsigned int talkspurtNumPackets_var;
    unsigned int packetID_var;
    simtime_t voipTimestamp_var;
    simtime_t voiceDuration_var;

  private:
    void copy(const SimpleVoIPPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SimpleVoIPPacket&);

  public:
    SimpleVoIPPacket(const char *name=NULL, int kind=0);
    SimpleVoIPPacket(const SimpleVoIPPacket& other);
    virtual ~SimpleVoIPPacket();
    SimpleVoIPPacket& operator=(const SimpleVoIPPacket& other);
    virtual SimpleVoIPPacket *dup() const {return new SimpleVoIPPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getTalkspurtID() const;
    virtual void setTalkspurtID(unsigned int talkspurtID);
    virtual unsigned int getTalkspurtNumPackets() const;
    virtual void setTalkspurtNumPackets(unsigned int talkspurtNumPackets);
    virtual unsigned int getPacketID() const;
    virtual void setPacketID(unsigned int packetID);
    virtual simtime_t getVoipTimestamp() const;
    virtual void setVoipTimestamp(simtime_t voipTimestamp);
    virtual simtime_t getVoiceDuration() const;
    virtual void setVoiceDuration(simtime_t voiceDuration);
};

inline void doPacking(cCommBuffer *b, SimpleVoIPPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SimpleVoIPPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _SIMPLEVOIPPACKET_M_H_

