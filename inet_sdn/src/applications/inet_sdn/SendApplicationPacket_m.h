//
// Generated file, do not edit! Created by nedtool 4.6 from applications/inet_sdn/SendApplicationPacket.msg.
//

#ifndef _SENDAPPLICATIONPACKET_M_H_
#define _SENDAPPLICATIONPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif



/**
 * Class generated from <tt>applications/inet_sdn/SendApplicationPacket.msg:1</tt> by nedtool.
 * <pre>
 * packet SendApplicationPacket
 * {
 *     string name;
 *     int info;
 * }
 * </pre>
 */
class INET_API SendApplicationPacket : public ::cPacket
{
  protected:
    opp_string name_var;
    int info_var;

  private:
    void copy(const SendApplicationPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SendApplicationPacket&);

  public:
    SendApplicationPacket(const char *name=NULL, int kind=0);
    SendApplicationPacket(const SendApplicationPacket& other);
    virtual ~SendApplicationPacket();
    SendApplicationPacket& operator=(const SendApplicationPacket& other);
    virtual SendApplicationPacket *dup() const {return new SendApplicationPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getName() const;
    virtual void setName(const char * name);
    virtual int getInfo() const;
    virtual void setInfo(int info);
};

inline void doPacking(cCommBuffer *b, SendApplicationPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SendApplicationPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _SENDAPPLICATIONPACKET_M_H_

