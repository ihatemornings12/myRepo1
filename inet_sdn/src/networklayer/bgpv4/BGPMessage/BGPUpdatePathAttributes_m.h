//
// Generated file, do not edit! Created by nedtool 4.6 from networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg.
//

#ifndef _BGPUPDATEPATHATTRIBUTES_M_H_
#define _BGPUPDATEPATHATTRIBUTES_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif



// cplusplus {{
#include "IPv4Address.h"
#include "BGPASPathSegment_m.h"
// }}

/**
 * Enum generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:28</tt> by nedtool.
 * <pre>
 * enum BGPUpdateAttributeTypeCode
 * {
 * 
 *     ORIGIN = 1;
 *     AS_PATH = 2;
 *     NEXT_HOP = 3;
 *     LOCAL_PREF = 5;
 *     ATOMIC_AGGREGATE = 6;
 * }
 * </pre>
 */
enum BGPUpdateAttributeTypeCode {
    ORIGIN = 1,
    AS_PATH = 2,
    NEXT_HOP = 3,
    LOCAL_PREF = 5,
    ATOMIC_AGGREGATE = 6
};

/**
 * Struct generated from networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:37 by nedtool.
 */
struct INET_API BGPUpdateAttributeFlags
{
    BGPUpdateAttributeFlags();
    bool optionalBit;
    bool transitiveBit;
    bool partialBit;
    bool estendedLengthBit;
};

void INET_API doPacking(cCommBuffer *b, BGPUpdateAttributeFlags& a);
void INET_API doUnpacking(cCommBuffer *b, BGPUpdateAttributeFlags& a);

/**
 * Struct generated from networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:45 by nedtool.
 */
struct INET_API BGPUpdateAttributeType
{
    BGPUpdateAttributeType();
    BGPUpdateAttributeFlags flags;
    unsigned char typeCode;
};

void INET_API doPacking(cCommBuffer *b, BGPUpdateAttributeType& a);
void INET_API doUnpacking(cCommBuffer *b, BGPUpdateAttributeType& a);

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:51</tt> by nedtool.
 * <pre>
 * class BGPUpdatePathAttributes
 * {
 *     BGPUpdateAttributeType type; // 2 octets
 *     unsigned short length; // 2 octets
 * }
 * </pre>
 */
class INET_API BGPUpdatePathAttributes : public ::cObject
{
  protected:
    BGPUpdateAttributeType type_var;
    unsigned short length_var;

  private:
    void copy(const BGPUpdatePathAttributes& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPUpdatePathAttributes&);

  public:
    BGPUpdatePathAttributes();
    BGPUpdatePathAttributes(const BGPUpdatePathAttributes& other);
    virtual ~BGPUpdatePathAttributes();
    BGPUpdatePathAttributes& operator=(const BGPUpdatePathAttributes& other);
    virtual BGPUpdatePathAttributes *dup() const {return new BGPUpdatePathAttributes(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual BGPUpdateAttributeType& getType();
    virtual const BGPUpdateAttributeType& getType() const {return const_cast<BGPUpdatePathAttributes*>(this)->getType();}
    virtual void setType(const BGPUpdateAttributeType& type);
    virtual unsigned short getLength() const;
    virtual void setLength(unsigned short length);
};

inline void doPacking(cCommBuffer *b, BGPUpdatePathAttributes& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPUpdatePathAttributes& obj) {obj.parsimUnpack(b);}

/**
 * Enum generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:58</tt> by nedtool.
 * <pre>
 * // ORIGIN (RFC4271 Section 4.3, Type code 1):
 * enum BGPUpdateOriginValues
 * {
 * 
 *     IGP = 0;
 *     EGP = 1;
 *     INCOMPLETE = 2;
 * }
 * </pre>
 */
enum BGPUpdateOriginValues {
    IGP = 0,
    EGP = 1,
    INCOMPLETE = 2
};

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:65</tt> by nedtool.
 * <pre>
 * class BGPUpdatePathAttributesOrigin extends BGPUpdatePathAttributes
 * {
 *     int value @enum(BGPUpdateOriginValues);
 * }
 * </pre>
 */
class INET_API BGPUpdatePathAttributesOrigin : public ::BGPUpdatePathAttributes
{
  protected:
    int value_var;

  private:
    void copy(const BGPUpdatePathAttributesOrigin& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPUpdatePathAttributesOrigin&);

  public:
    BGPUpdatePathAttributesOrigin();
    BGPUpdatePathAttributesOrigin(const BGPUpdatePathAttributesOrigin& other);
    virtual ~BGPUpdatePathAttributesOrigin();
    BGPUpdatePathAttributesOrigin& operator=(const BGPUpdatePathAttributesOrigin& other);
    virtual BGPUpdatePathAttributesOrigin *dup() const {return new BGPUpdatePathAttributesOrigin(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getValue() const;
    virtual void setValue(int value);
};

inline void doPacking(cCommBuffer *b, BGPUpdatePathAttributesOrigin& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPUpdatePathAttributesOrigin& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:71</tt> by nedtool.
 * <pre>
 * // AS_PATH (RFC4271 Section 4.3, Type code 2):
 * class BGPUpdatePathAttributesASPath extends BGPUpdatePathAttributes
 * {
 *     BGPASPathSegment value[];
 * }
 * </pre>
 */
class INET_API BGPUpdatePathAttributesASPath : public ::BGPUpdatePathAttributes
{
  protected:
    BGPASPathSegment *value_var; // array ptr
    unsigned int value_arraysize;

  private:
    void copy(const BGPUpdatePathAttributesASPath& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPUpdatePathAttributesASPath&);

  public:
    BGPUpdatePathAttributesASPath();
    BGPUpdatePathAttributesASPath(const BGPUpdatePathAttributesASPath& other);
    virtual ~BGPUpdatePathAttributesASPath();
    BGPUpdatePathAttributesASPath& operator=(const BGPUpdatePathAttributesASPath& other);
    virtual BGPUpdatePathAttributesASPath *dup() const {return new BGPUpdatePathAttributesASPath(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setValueArraySize(unsigned int size);
    virtual unsigned int getValueArraySize() const;
    virtual BGPASPathSegment& getValue(unsigned int k);
    virtual const BGPASPathSegment& getValue(unsigned int k) const {return const_cast<BGPUpdatePathAttributesASPath*>(this)->getValue(k);}
    virtual void setValue(unsigned int k, const BGPASPathSegment& value);
};

inline void doPacking(cCommBuffer *b, BGPUpdatePathAttributesASPath& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPUpdatePathAttributesASPath& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:77</tt> by nedtool.
 * <pre>
 * //NEXT_HOP (RFC4271 Section 4.3, Type code 3):
 * class BGPUpdatePathAttributesNextHop extends BGPUpdatePathAttributes
 * {
 *     IPv4Address value;
 * }
 * </pre>
 */
class INET_API BGPUpdatePathAttributesNextHop : public ::BGPUpdatePathAttributes
{
  protected:
    IPv4Address value_var;

  private:
    void copy(const BGPUpdatePathAttributesNextHop& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPUpdatePathAttributesNextHop&);

  public:
    BGPUpdatePathAttributesNextHop();
    BGPUpdatePathAttributesNextHop(const BGPUpdatePathAttributesNextHop& other);
    virtual ~BGPUpdatePathAttributesNextHop();
    BGPUpdatePathAttributesNextHop& operator=(const BGPUpdatePathAttributesNextHop& other);
    virtual BGPUpdatePathAttributesNextHop *dup() const {return new BGPUpdatePathAttributesNextHop(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual IPv4Address& getValue();
    virtual const IPv4Address& getValue() const {return const_cast<BGPUpdatePathAttributesNextHop*>(this)->getValue();}
    virtual void setValue(const IPv4Address& value);
};

inline void doPacking(cCommBuffer *b, BGPUpdatePathAttributesNextHop& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPUpdatePathAttributesNextHop& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:83</tt> by nedtool.
 * <pre>
 * //LOCAL_PREF (RFC4271 Section 4.3, Type code 5):
 * class BGPUpdatePathAttributesLocalPref extends BGPUpdatePathAttributes
 * {
 *     unsigned int value;
 * }
 * </pre>
 */
class INET_API BGPUpdatePathAttributesLocalPref : public ::BGPUpdatePathAttributes
{
  protected:
    unsigned int value_var;

  private:
    void copy(const BGPUpdatePathAttributesLocalPref& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPUpdatePathAttributesLocalPref&);

  public:
    BGPUpdatePathAttributesLocalPref();
    BGPUpdatePathAttributesLocalPref(const BGPUpdatePathAttributesLocalPref& other);
    virtual ~BGPUpdatePathAttributesLocalPref();
    BGPUpdatePathAttributesLocalPref& operator=(const BGPUpdatePathAttributesLocalPref& other);
    virtual BGPUpdatePathAttributesLocalPref *dup() const {return new BGPUpdatePathAttributesLocalPref(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getValue() const;
    virtual void setValue(unsigned int value);
};

inline void doPacking(cCommBuffer *b, BGPUpdatePathAttributesLocalPref& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPUpdatePathAttributesLocalPref& obj) {obj.parsimUnpack(b);}

/**
 * Enum generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:89</tt> by nedtool.
 * <pre>
 * //ATOMIC_AGGREGATE (RFC4271 Section 4.3, Type code 6):
 * enum BGPUpdateAtomicAggregateValues
 * {
 * 
 *     NO_SPECIFIC_ROUTE = 0;
 *     SPECIFIC_ROUTE = 1;
 * }
 * </pre>
 */
enum BGPUpdateAtomicAggregateValues {
    NO_SPECIFIC_ROUTE = 0,
    SPECIFIC_ROUTE = 1
};

/**
 * Class generated from <tt>networklayer/bgpv4/BGPMessage/BGPUpdatePathAttributes.msg:95</tt> by nedtool.
 * <pre>
 * class BGPUpdatePathAttributesAtomicAggregate extends BGPUpdatePathAttributes
 * {
 *     int value @enum(BGPUpdateAtomicAggregateValues);
 * }
 * </pre>
 */
class INET_API BGPUpdatePathAttributesAtomicAggregate : public ::BGPUpdatePathAttributes
{
  protected:
    int value_var;

  private:
    void copy(const BGPUpdatePathAttributesAtomicAggregate& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BGPUpdatePathAttributesAtomicAggregate&);

  public:
    BGPUpdatePathAttributesAtomicAggregate();
    BGPUpdatePathAttributesAtomicAggregate(const BGPUpdatePathAttributesAtomicAggregate& other);
    virtual ~BGPUpdatePathAttributesAtomicAggregate();
    BGPUpdatePathAttributesAtomicAggregate& operator=(const BGPUpdatePathAttributesAtomicAggregate& other);
    virtual BGPUpdatePathAttributesAtomicAggregate *dup() const {return new BGPUpdatePathAttributesAtomicAggregate(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getValue() const;
    virtual void setValue(int value);
};

inline void doPacking(cCommBuffer *b, BGPUpdatePathAttributesAtomicAggregate& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BGPUpdatePathAttributesAtomicAggregate& obj) {obj.parsimUnpack(b);}


#endif // ifndef _BGPUPDATEPATHATTRIBUTES_M_H_

