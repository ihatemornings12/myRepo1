//
// Generated file, do not edit! Created by nedtool 4.6 from networklayer/manetrouting/dymo_fau/DYMO_PacketBBMessage.msg.
//

#ifndef _DYMO_PACKETBBMESSAGE_M_H_
#define _DYMO_PACKETBBMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef INET_API
#  if defined(INET_EXPORT)
#    define INET_API  OPP_DLLEXPORT
#  elif defined(INET_IMPORT)
#    define INET_API  OPP_DLLIMPORT
#  else
#    define INET_API
#  endif
#endif



/**
 * Class generated from <tt>networklayer/manetrouting/dymo_fau/DYMO_PacketBBMessage.msg:24</tt> by nedtool.
 * <pre>
 * //
 * // PacketBB Message
 * //
 * message DYMO_PacketBBMessage extends cPacket
 * {
 *     int msgHdrHopLimit;
 * 
 * }
 * </pre>
 */
class INET_API DYMO_PacketBBMessage : public ::cPacket
{
  protected:
    int msgHdrHopLimit_var;

  private:
    void copy(const DYMO_PacketBBMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DYMO_PacketBBMessage&);

  public:
    DYMO_PacketBBMessage(const char *name=NULL, int kind=0);
    DYMO_PacketBBMessage(const DYMO_PacketBBMessage& other);
    virtual ~DYMO_PacketBBMessage();
    DYMO_PacketBBMessage& operator=(const DYMO_PacketBBMessage& other);
    virtual DYMO_PacketBBMessage *dup() const {return new DYMO_PacketBBMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getMsgHdrHopLimit() const;
    virtual void setMsgHdrHopLimit(int msgHdrHopLimit);
};

inline void doPacking(cCommBuffer *b, DYMO_PacketBBMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, DYMO_PacketBBMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _DYMO_PACKETBBMESSAGE_M_H_

